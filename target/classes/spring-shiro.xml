<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cache="http://www.springframework.org/schema/cache"
	   xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
         http://www.springframework.org/schema/cache
         http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-4.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- Shiro Filter -->
	<bean id="propertyConfigurer"
		  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:shiro.properties</value>
			</list>
		</property>
		<property name="fileEncoding" value="utf-8"/>
	</bean>

	<bean id="shiroFilter" class="com.lzapi.shiro.MyShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login/test"/>
		<property name="filters">
			<util:map>
				<entry key="rolesOr" value-ref="rolesOrFilter"/>
				<entry key="perms" value-ref="myPermissionFilter"/>
				<entry key="logout" value-ref="logoutFilter"/>

				<!--<entry key="authc" value-ref="ajaxPermissionsAuthorizationFilter"/>-->
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				<!--数据库动态加载权限-->
				<!--/=anon-->
				<!--/login/auth = anon-->
				<!--/login/test = myPerms["user:update"]-->
				<!--roles["作家"]-->
				<!--/user/login = anon-->
				<!--/user/logout = anon-->
				<!--/users/getInfo = anon-->
				<!--/** = anon-->
			</value>
		</property>
	</bean>

	<bean id="logoutFilter" class=" com.lzapi.controller.common.SystemLogoutFilter">
		<property name="redirectUrl" value="anon"/>
	</bean>
	<bean class="com.lzapi.controller.common.RolesOrFilter" id="rolesOrFilter"/>
	<bean class="com.lzapi.controller.common.MyPermissionFilter" id="myPermissionFilter"/>

	<!--<bean class="com.lzapi.controller.common.AjaxPermissionsAuthorizationFilter" id="ajaxPermissionsAuthorizationFilter"/>-->

	<bean id="casRealm" class="com.lzapi.shiro.UserRealm">
		<!--<property name="credentialsMatcher" ref="credentialsMatcher"/>-->
	</bean>
	<!--<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">-->
		<!--<property name="hashAlgorithmName" value="md5"/>-->
		<!--<property name="hashIterations" value="1"/>-->
	<!--</bean>-->

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="casRealm" />
		<property name="sessionManager" ref="sessionManager"/>
		<property name="cacheManager" ref="cacheManager"/>
	</bean>
	<bean id="sessionManager" class="com.lzapi.shiro.session.CustomSessionManager">
		<property name="sessionDAO" ref="sessionDao"/>
	</bean>
	<bean id="sessionDao" class="com.lzapi.shiro.session.RedisSessionDao"/>
	<bean id="cacheManager" class="com.lzapi.shiro.cache.RedisCacheManager"/>

	<!-- 启用shrio授权注解拦截方式 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>


	<!-- AOP式方法级权限检查  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>

</beans>